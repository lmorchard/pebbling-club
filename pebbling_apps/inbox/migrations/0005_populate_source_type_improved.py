# Generated by Django 5.1.6 on 2025-07-03 03:59

from django.db import migrations, models


def populate_source_type(apps, schema_editor):
    """Populate source_type field based on existing source field values."""
    InboxItem = apps.get_model("inbox", "InboxItem")

    # Update items with mastodon sources (most precise identification)
    mastodon_count = InboxItem.objects.filter(source__startswith="mastodon:").update(
        source_type="mastodon"
    )

    # Update items with feed sources - check for feed URLs or source patterns
    # Look for items that have feed_url set OR source contains feed patterns
    feed_count = (
        InboxItem.objects.filter(
            models.Q(feed_url__isnull=False) & ~models.Q(feed_url="")
            | models.Q(source__icontains="feed")
            | models.Q(source__icontains="rss")
            | models.Q(source__icontains="atom")
        )
        .exclude(source_type="mastodon")
        .update(source_type="feed")
    )

    # Update import sources (common patterns)
    import_count = (
        InboxItem.objects.filter(
            models.Q(source__icontains="import")
            | models.Q(source__icontains="bookmark")
            | models.Q(source__icontains="pinboard")
            | models.Q(source__icontains="delicious")
        )
        .exclude(source_type__in=["mastodon", "feed"])
        .update(source_type="import")
    )

    # Any remaining items can be considered manual
    manual_count = InboxItem.objects.filter(source_type="").update(source_type="manual")

    print(f"Source type migration completed:")
    print(f"  Mastodon: {mastodon_count}")
    print(f"  Feed: {feed_count}")
    print(f"  Import: {import_count}")
    print(f"  Manual: {manual_count}")


def reverse_populate_source_type(apps, schema_editor):
    """Reverse migration - clear source_type field."""
    InboxItem = apps.get_model("inbox", "InboxItem")
    InboxItem.objects.all().update(source_type="")


class Migration(migrations.Migration):

    dependencies = [
        ("inbox", "0004_add_source_type_field"),
    ]

    operations = [
        migrations.RunPython(
            populate_source_type,
            reverse_populate_source_type,
        ),
    ]
