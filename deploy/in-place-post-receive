#!/bin/bash
# Post-receive hook for in-place repo deployment
# Resets the current checkout to whatever gets pushed

set -e

LOG_FILE="./git-deploy.log"

# Function to log messages
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

log "=== Post-receive hook triggered ==="
log "Current directory: $(pwd)"

# Store the git directory path
GIT_DIR=$(pwd)
WORK_TREE=$(dirname "$GIT_DIR")

# Change to the working tree (parent of .git)
cd "$WORK_TREE"
log "Changed to working tree: $(pwd)"

# Set git environment variables so git knows where everything is
export GIT_DIR="$GIT_DIR"
export GIT_WORK_TREE="$WORK_TREE"

# Process each pushed ref
while read oldrev newrev refname; do
    branch=$(basename "$refname")
    
    log "Processing ref: $refname (branch: $branch)"
    log "Old commit: $oldrev"
    log "New commit: $newrev"
    
    # Reset the working tree to the new commit
    log "Force resetting to commit $newrev"
    git reset --hard "$newrev"
    
    # Clean any untracked files and directories (but be safe!)
    log "Cleaning untracked files and directories"
    # Use -n first to see what would be deleted
    log "Files that would be cleaned:"
    git clean -fdn | tee -a "$LOG_FILE"
    
    # Actually clean, but exclude important directories
    git clean -fd -e .git -e .env -e data -e git-deploy.log
    
    # Verify the reset
    actual_commit=$(git rev-parse HEAD)
    if [ "$actual_commit" = "$newrev" ]; then
        log "✅ Successfully reset to $newrev"
    else
        log "❌ ERROR: Reset failed. Expected $newrev, got $actual_commit"
        exit 1
    fi
    
    # Run deployment commands
    log "Running deployment commands..."
    
    # Rebuild Docker containers
    log "Rebuilding Docker containers..."
    docker-compose -f docker/compose/docker-compose.yml build
    
    # Run migrations
    log "Running migrations..."
    docker-compose -f docker/compose/docker-compose.yml exec -T web python manage.py migrate --noinput
    
    # Restart containers
    log "Restarting containers..."
    docker-compose -f docker/compose/docker-compose.yml up -d
    
    # Clean up old images
    log "Cleaning up old Docker images..."
    docker image prune -f
    
    log "=== Deployment complete for $refname ==="
    
done

log "=== Post-receive hook finished ==="